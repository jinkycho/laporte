<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CartMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="cartMap"
        type="com.project.laporte.model.Cart">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="cartno" column="cartno" />
        <result property="userno" column="userno" />
        <result property="prodno" column="prodno" />
        <result property="ea" column="ea" />
        <result property="regdate" column="regdate" />
        <result property="editdate" column="editdate" />
        <result property="uname" column="name AS 'uname'" />
        <result property="pname" column="name AS 'pname'" />
    </resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectCartItem"
        parameterType="com.project.laporte.model.Cart"
        resultMap="cartMap">
        SELECT c.cartno, c.userno, c.prodno, c.ea, u.name, p.name, p.price, (p.price*c.ea) AS totalprice
        FROM cart c
        INNER JOIN user u ON u.userno = c.userno
        INNER JOIN product p ON p.prodno = c.prodno
        WHERE c.userno = u.userno AND c.prodno = p.prodno AND c.userno = #{userno}
        ORDER BY cartno
    </select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectCartList"
        parameterType="com.project.laporte.model.Cart"
        resultMap="cartMap">
        SELECT c.cartno, c.userno, c.prodno, c.ea, u.name, p.name, p.price, (p.price*c.ea) AS totalprice
        FROM cart c
        INNER JOIN user u ON u.userno = c.userno
        INNER JOIN product p ON p.prodno = c.prodno
        WHERE c.userno = u.userno AND c.prodno = p.prodno AND c.userno = #{userno}
        ORDER BY cartno
    </select>
	
    <!-- 장바구니 저장을 위한 기능 정의 -->
	<insert id="insertCartItem"
		parameterType = "com.project.laporte.model.Cart"
		useGeneratedKeys="true" keyProperty="cartno">
		INSERT INTO cart(userno, prodno, ea, regdate, editdate)
		VALUES(#{userno}, #{prodno}, #{ea}, now(), now())
	</insert>

    <!-- 장바구니 수정을 위한 기능 정의 -->
    <update id="updateCartItem"
        parameterType="com.project.laporte.model.Cart">
        UPDATE cart SET
            cartno=#{cartno}, ea=#{ea}, editdate=#{editdate}
        WHERE userno=#{userno} AND prodno=#{prodno}
    </update>
    
    <!-- 장바구니 삭제를 위한 기능 정의 -->
    <delete id="deleteCartItem"
        parameterType="com.project.laporte.model.Cart">
        DELETE FROM cart WHERE cartno=#{cartno}
    </delete>
    
    <!--  장바구니 중복 확인을 위한 기능 정의 -->
	<select id="countCart"
		parameterType = "com.project.laporte.model.Cart" resultType="int">
		SELECT COUNT(*) FROM cart WHERE userno = #{userno} AND prodno = #{prodno}
	</select>
    
    <!-- 장바구니 동일상품 추가시 수량증가 기능 정의 -->
    <update id="updateCartList"
    	parameterType="com.project.laporte.model.Cart">
    	UPDATE cart SET
    		ea = ea + 1
    		WHERE userno = #{userno} AND prodno = #{prodno}
    </update>
	
</mapper>